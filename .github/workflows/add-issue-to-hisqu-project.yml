name: Add New Issues to HisQu Project

on:
  issues:
    types: [opened]

jobs:
  add-to-project:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      projects: write
      repository-projects: write

    steps:
      - name: Check if issue is already in HisQu project and add if not
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const projectFullName = "HisQu/1"; // org/project_number

            // Parse org and project number
            const [orgName, projectNumber] = projectFullName.split('/');

            // Get the project by number for the org
            const { data: projects } = await github.rest.projects.listForOrg({
              org: orgName,
              state: 'open'
            });

            const project = projects.find(p => p.number.toString() === projectNumber);
            if (!project) {
              core.setFailed(`Project HisQu/1 not found`);
              return;
            }

            // Get all columns in the project
            const { data: columns } = await github.rest.projects.listColumns({
              project_id: project.id
            });

            if (columns.length === 0) {
              core.setFailed(`No columns found in project HisQu/1`);
              return;
            }

            // Get cards from all columns to check if issue is already present
            let issueAlreadyInProject = false;
            for (const column of columns) {
              const cards = await github.paginate(github.rest.projects.listCards, {
                column_id: column.id,
                per_page: 100,
              });
              if (cards.some(card => card.content_url?.endsWith(`/issues/${context.payload.issue.number}`))) {
                issueAlreadyInProject = true;
                break;
              }
            }

            if (issueAlreadyInProject) {
              core.info(`Issue #${context.payload.issue.number} is already in the HisQu project.`);
              return;
            }

            // Add issue to the first column in the project (you can customize which column)
            const firstColumn = columns[0];
            await github.rest.projects.createCard({
              column_id: firstColumn.id,
              content_id: context.payload.issue.node_id,
              content_type: 'Issue',
            });

            core.info(`Issue #${context.payload.issue.number} added to HisQu project in column '${firstColumn.name}'.`);
